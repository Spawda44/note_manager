import datetime as dt


# –ù–∞—á–∞–ª–æ –ø—Ä–æ–≥—Ä–∞–º–º—ã
def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–º–µ—Ç–æ–∫
    notes = []
    # –°–æ–∑–¥–∞—ë–º –∑–∞–º–µ—Ç–∫–∏
    note = build_note(notes)
    # –í—ã–≤–æ–¥–∏–º –∑–∞–º–µ—Ç–∫–∏
    output(note)
    
    # –¶–∏–∫–ª –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –∑–∞–º–µ—Ç–∫–∞–º–∏
    while True:
        choice = input('\n–ñ–µ–ª–∞–µ—Ç–µ –≤—ã–π—Ç–∏ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã? \n[1] - ‚úîÔ∏è  –î–∞ \n[2] - ‚ùå –ù–µ—Ç \n>> ')
        
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –≤—ã–π—Ç–∏ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã, —Ç–æ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞
        if choice == '1':
            break
        elif choice == '2':
        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É
            while True:
                choice = input('\n–ñ–µ–ª–∞–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É? \n[1] - ‚úîÔ∏è  –î–∞ \n[2] - ‚ùå –ù–µ—Ç \n>> ')
                
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Ö–æ—á–µ—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –∑–∞–º–µ—Ç–∫—É, —Ç–æ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞
                if choice == '2':
                    break
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É, —Ç–æ –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é build_note
                elif choice == '1':
                    note = build_note(notes)
                    output(note)
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ, —Ç–æ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                else:
                    print('\n‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.\n')
            
            # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å
            while True:
                choice = input('\n–ñ–µ–ª–∞–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–º–µ—Ç–∫–∏? \n[1] - ‚úîÔ∏è  –î–∞ \n[2] - ‚ùå –ù–µ—Ç \n>> ')

                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Ö–æ—á–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å —Å—Ç–∞—Ç—É—Å, —Ç–æ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞
                if choice == '2':
                    break
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å, —Ç–æ –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é change_status
                elif choice == '1':
                    change_status(notes)
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ, —Ç–æ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                else:
                    print('\n‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.\n')
            
            # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —É–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É
            while True:
                choice = input('\n–ñ–µ–ª–∞–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É? \n[1] - ‚úîÔ∏è  –î–∞ \n[2] - ‚ùå –ù–µ—Ç \n>> ')

                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Ö–æ—á–µ—Ç —É–¥–∞–ª—è—Ç—å –∑–∞–º–µ—Ç–∫—É, —Ç–æ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞
                if choice == '2':
                    break
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç —É–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É, —Ç–æ –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é delete_note
                elif choice == '1':
                    delete_note(notes)
                # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ, —Ç–æ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
                else:
                    print('\n‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.\n')

        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ, —Ç–æ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        else:
            print('\n‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.\n')


# –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
def data_init():
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    username = input("üë§ –í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è >> ")
    titles   = title_init()
    content  = input("\nüìù –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏ >> ")
    dates    = date_init()
    status   = status_init()
    deadline = deadline_init(dates[1], dates[0])
    
    return [username, titles, content, *dates, status, deadline]


# –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞—Ç
def date_init():
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —ç—Ç—É –¥–∞—Ç—É –≤ –µ–¥–∏–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç DD-MM-YYYY
    normalize_date = lambda data: data.replace(".", "-").replace("/", "-")
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É —Å–æ–∑–¥–∞–Ω–∏—è –∏ –¥–∞—Ç—É –¥–µ–¥–ª–∞–π–Ω–∞
    while True:
        issue_date_str = normalize_date(input("\nüóìÔ∏è  –í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –¥–µ–¥–ª–∞–π–Ω–∞ –∑–∞–º–µ—Ç–∫–∏ (–¥–¥-–º–º-–≥–≥–≥–≥) >>"))

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
        create_date = dt.datetime.now().strftime("%d-%m-%Y")
        create_date = dt.datetime.strptime(create_date, "%d-%m-%Y")
        issue_date  = dt.datetime.strptime(issue_date_str, "%d-%m-%Y")

        # –ï—Å–ª–∏ –¥–∞—Ç–∞ –¥–µ–¥–ª–∞–π–Ω–∞ –±–æ–ª—å—à–µ –¥–∞—Ç—ã —Å–æ–∑–¥–∞–Ω–∏—è, —Ç–æ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞
        if issue_date >= create_date:
            return [create_date, issue_date]
        else:
            print('‚ùå –î–∞—Ç–∞ –¥–µ–¥–ª–∞–π–Ω–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ –¥–∞—Ç—ã —Å–æ–∑–¥–∞–Ω–∏—è')


# –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
def title_init():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∏ —Å—á—ë—Ç—á–∏–∫
    titles, count, title = [], 0, ' '
    print()

    while True:
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        title = str(input(f'üìå –ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ #{count+1} - [Enter] –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å >> '))
        # –ï—Å–ª–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–µ –ø—É—Å—Ç, —Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ–≥–æ –Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å
        if title != '':
            # –ï—Å–ª–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π, —Ç–æ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
            if title.lower() not in list(map(str.lower, titles)):
                # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –≤ —Å–ø–∏—Å–æ–∫
                titles.append(title)
                count += 1
            else:
                print('\n‚ùå –¢–∞–∫–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∂–µ –µ—Å—Ç—å!')
        # –ï—Å–ª–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø—É—Å—Ç, —Ç–æ –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞
        else:
            break

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    return titles


# –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç–∞—Ç—É—Å–∞
def status_init():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å —Å—Ç–∞—Ç—É—Å–æ–≤
    statuses = {
        '1': '‚úîÔ∏è  –í—ã–ø–æ–ª–Ω–µ–Ω–æ',
        '2': 'üü° –û—Ç–ª–æ–∂–µ–Ω–æ',
        '3': '‚ùå –ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ'
    }

    while True:
        # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç—É—Å—ã –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã
        print('\n–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã:\n')
        for key, value in statuses.items():
            print(f'[{key}] - {value}')
    
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–º–µ—Ç–∫–∏
        status = input("\n–í–≤–µ–¥–∏—Ç–µ —Å—Ç–∞—Ç—É—Å –∑–∞–º–µ—Ç–∫–∏ >> ")
        
        # –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –≤–∞–ª–∏–¥–Ω—ã–π, —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –µ–≥–æ
        if status in statuses:
            print()
            return statuses.get(status)
        # –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –Ω–µ –≤–∞–ª–∏–¥–Ω—ã–π, —Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        else:
            print ('\n‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å\n')


# –§—É–Ω–∫—Ü–∏—è –ø–æ–¥—Å—á—ë—Ç–∞ –≤—Ä–µ–º–µ–Ω–∏ –¥–æ –¥–µ–¥–ª–∞–π–Ω–∞
def deadline_init(deadline_date, create_date):
    # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É –¥–∞—Ç–∞–º–∏
    deadline = deadline_date - create_date

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–∞–∑–Ω–∏—Ü—É –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏
    if deadline.days <= 0:
        return 'üîî –î–µ–¥–ª–∞–π–Ω —É–∂–µ —Å–µ–≥–æ–¥–Ω—è!'
    elif deadline.days == 1:
        return 'üîî –î–µ–¥–ª–∞–π–Ω –∑–∞–≤—Ç—Ä–∞!'
    else:
        return 'üîî –î–µ–¥–ª–∞–π–Ω —á–µ—Ä–µ–∑ ' + str(deadline.days) + ' –¥–Ω–µ–π!'
     

# –§—É–Ω–∫—Ü–∏—è —Å–±–æ—Ä–∫–∏ –∑–∞–º–µ—Ç–∫–∏
def build_note(notes):
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    data = data_init()

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏
    note = {
        'üë§ –í–∞—à–µ –∏–º—è'           : data[0],
        'üìå –ó–∞–≥–æ–ª–æ–≤–∫–∏'          : data[1],
        'üìù –û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏'   : data[2],
        'üìÖ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è'      : data[3].strftime("%d-%m"),
        '‚è∞ –î–∞—Ç–∞ –¥–µ–¥–ª–∞–π–Ω–∞'      : data[4].strftime("%d-%m"),
        'üîî –°—Ç–∞—Ç—É—Å'             : data[5],
        '‚åõ –î–æ –¥–µ–¥–ª–∞–π–Ω–∞'        : data[6]
    }
    
    notes.append(note)

    return notes


# –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
def output(notes):
    for note in notes:
        # –í—ã–≤–æ–¥–∏–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        print(f'\n{"="*50}\nüìù –ó–∞–º–µ—Ç–∫–∞ #{notes.index(note)+1}:\n{"="*50}')
    
        # –í—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –≤ –≤–∏–¥–µ —Ç–∞–±–ª–∏—Ü—ã
        for key, value in note.items():
            # –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ - —Å–ø–∏—Å–æ–∫, —Ç–æ –ø—Ä–∏–º–µ–Ω—è–µ–º –º–µ—Ç–æ–¥ join –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏
            if type(value) == list:
                print(f'{key}: {", ".join(value)}')
            # –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ - —Å—Ç—Ä–æ–∫–∞, —Ç–æ –≤—ã–≤–æ–¥–∏–º –µ–≥–æ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏
            else:
                print(f'{key}: {value}')


# –§—É–Ω–∫—Ü–∏—è –∑–∞–º–µ–Ω—ã —Å—Ç–∞—Ç—É—Å–∞
def change_status(notes):
    while True:
        # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä –∑–∞–º–µ—Ç–∫–∏
        note_number = int(input(f'\nüìù –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–º–µ—Ç–∫–∏ (1-{len(notes)})>> '))
        # –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –∑–∞–º–µ—Ç–∫–∏ –≤–∞–ª–∏–¥–Ω—ã–π, —Ç–æ –∑–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å
        if note_number > 0 and note_number <= len(notes):
            notes[note_number-1]['üîî –°—Ç–∞—Ç—É—Å'] = status_init()
            print('\n‚úÖ –°—Ç–∞—Ç—É—Å –∑–∞–º–µ—Ç–∫–∏ –∏–∑–º–µ–Ω—ë–Ω.\n')
            output(notes)
            break
        # –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –∑–∞–º–µ—Ç–∫–∏ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã–π, —Ç–æ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        else:
            print('\n‚ùå –¢–∞–∫–æ–π –∑–∞–º–µ—Ç–∫–∏ –Ω–µ—Ç.\n')


# –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏
def delete_note(notes):
    while True:
        # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä –∑–∞–º–µ—Ç–∫–∏
        note_number = int(input(f'\nüìù –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–º–µ—Ç–∫–∏ (1-{len(notes)})>> '))
        # –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –∑–∞–º–µ—Ç–∫–∏ –≤–∞–ª–∏–¥–Ω—ã–π, —Ç–æ —É–¥–∞–ª—è–µ–º –∑–∞–º–µ—Ç–∫—É
        if note_number > 0 and note_number <= len(notes):
            notes.pop(note_number-1)
            print('\n‚úÖ –ó–∞–º–µ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∞.\n')
            output(notes)
            break
        # –ï—Å–ª–∏ –Ω–æ–º–µ—Ä –∑–∞–º–µ—Ç–∫–∏ –Ω–µ –≤–∞–ª–∏–¥–Ω—ã–π, —Ç–æ –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        else:
            print('\n‚ùå –¢–∞–∫–æ–π –∑–∞–º–µ—Ç–∫–∏ –Ω–µ—Ç.\n')


# –°—Ç–∞—Ä—Ç –ø—Ä–æ–≥—Ä–∞–º–º—ã
if __name__ == '__main__':
    main()
