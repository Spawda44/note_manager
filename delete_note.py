import datetime


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞—Ç—ã


def normalize_date(date_str):
  # –ó–∞–º–µ–Ω—è–µ–º —Ç–æ—á–∫–∏ –∏ —Å–ª–µ—à–∏ –Ω–∞ –¥–µ—Ñ–∏—Å—ã
  return date_str.replace('.', '-').replace('/', '-')


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö –æ –∑–∞–º–µ—Ç–∫–µ data


def data_init():

  username         = input('\nüë§ ‚Ä¢ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è >> ')
  content          = input('üìù ‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏ >> ')
  
  # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –≤–≤–µ–¥–µ–Ω–Ω—É—é –¥–∞—Ç—É, –∑–∞–º–µ–Ω—è—è —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏ –Ω–∞ –¥–µ—Ñ–∏—Å—ã
  created_date_str = normalize_date(input('üìÖ ‚Ä¢ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏ >> '))
  issue_date_str   = normalize_date(input('üìÖ ‚Ä¢ –î–∞—Ç–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏ >> '))
  
  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫–∏ –≤ –æ–±—ä–µ–∫—Ç—ã datetime
  created_date     = datetime.datetime.strptime(created_date_str, '%d-%m-%Y')
  issue_date       = datetime.datetime.strptime(issue_date_str, '%d-%m-%Y')
  
  return [username, content, created_date, issue_date]


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–º–µ—Ç–∫–∏ status


def status_init():
  
  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –º–µ–∂–¥—É —Ü–∏—Ñ—Ä–æ–≤—ã–º –≤—ã–±–æ—Ä–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  # –∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ–º —Å—Ç–∞—Ç—É—Å–∞
  
  statuses = {
    '1': '‚è≥ ‚Ä¢ –í –ø—Ä–æ—Ü–µ—Å—Å–µ',  # –°—Ç–∞—Ç—É—Å –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–º–µ—Ç–æ–∫
    '2': '‚úîÔ∏è  ‚Ä¢ –í—ã–ø–æ–ª–Ω–µ–Ω–æ',   # –°—Ç–∞—Ç—É—Å –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–º–µ—Ç–æ–∫
    '3': '‚ùå ‚Ä¢ –û—Ç–ª–æ–∂–µ–Ω–æ'     # –°—Ç–∞—Ç—É—Å –¥–ª—è –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã—Ö –∑–∞–º–µ—Ç–æ–∫
  }

  while True:
    print('\nüîò ‚Ä¢ –°—Ç–∞—Ç—É—Å –∑–∞–º–µ—Ç–∫–∏:\n1 - ‚è≥ ‚Ä¢ –í –ø—Ä–æ—Ü–µ—Å—Å–µ\n2 - ‚úîÔ∏è  ‚Ä¢ –í—ã–ø–æ–ª–Ω–µ–Ω–æ\n3 - ‚ùå ‚Ä¢ –û—Ç–ª–æ–∂–µ–Ω–æ')
    
    choice = input('üîò ‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç 1-3 >> ')
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –µ—Å—Ç—å –ª–∏ –≤—ã–±–æ—Ä –≤ —Å–ª–æ–≤–∞—Ä–µ —Å—Ç–∞—Ç—É—Å–æ–≤
    if choice in statuses:
      return statuses[choice]  # –í–æ–∑–≤—Ä–∞—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
      
    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø—Ä–∏ –Ω–µ–≤–µ—Ä–Ω–æ–º –≤—ã–±–æ—Ä–µ
    print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä!")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ titles


def title_init():

  titles, title, count = [], ' ', 0
  
  while True:

    title = str(input(f'\nüîñ ‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞ {count+1} - [Enter] –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å >> '))
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–æ–∫–∏ title –Ω–∞ –ø—É—Å—Ç–æ—Ç—É, –µ—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø—É—Å—Ç–∞—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ–º —Ü–∏–∫–ª
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–æ–∫–∏ –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç—ã –≤ —Å–ø–∏—Å–∫–µ, –µ—Å–ª–∏ –¥—É–±–ª–∏–∫–∞—Ç –µ—Å—Ç—å - –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫
    
    if title != '':
      if title.lower() not in (map(str.lower, titles)):
        titles.append(title)
        count += 1
      else:
        print("‚ö†Ô∏è ‚Ä¢ –¢–∞–∫–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
    else:
      break

  return titles


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–Ω—Å–æ–ª—å


def output(notes):
  for i, note in enumerate(notes, 1):
    print(f"\n" + "=" * 50 + f"\nüìù –ó–∞–º–µ—Ç–∫–∞ #{i}:\n" + "=" * 50 + "\n")
    
    for key, value in note.items():
      # –ò—Å–ø–æ–ª—å–∑—É–µ–º f-—Å—Ç—Ä–æ–∫—É –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å–ø–∏—Å–æ–∫ –≤ —Å—Ç—Ä–æ–∫—É —á–µ—Ä–µ–∑ join –µ—Å–ª–∏ —ç—Ç–æ —Å–ø–∏—Å–æ–∫
      value_str = ', '.join(value) if isinstance(value, list) else value
      print(f'{key}: {value_str}')


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–µ–¥–ª–∞–π–Ω–∞

 
def check_deadline(created_date, issue_date):
  current_date = datetime.datetime.now()
   
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–µ –≤ –±—É–¥—É—â–µ–º
  if created_date > current_date:
    return "‚ö†Ô∏è ‚Ä¢ –û—à–∏–±–∫–∞: –¥–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –±—É–¥—É—â–µ–º"
   
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–µ–¥–ª–∞–π–Ω –Ω–µ —Ä–∞–Ω—å—à–µ –¥–∞—Ç—ã —Å–æ–∑–¥–∞–Ω–∏—è
  if issue_date < created_date:
    return "‚ö†Ô∏è ‚Ä¢ –û—à–∏–±–∫–∞: –¥–µ–¥–ª–∞–π–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞–Ω—å—à–µ –¥–∞—Ç—ã —Å–æ–∑–¥–∞–Ω–∏—è"
   
  # –í—ã—á–∏—Å–ª—è–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è
  time_left = issue_date - current_date
   
  if time_left.days < 0:
    return "‚ö†Ô∏è ‚Ä¢ –î–µ–¥–ª–∞–π–Ω –ø—Ä–æ—Å—Ä–æ—á–µ–Ω!"
  elif time_left.days == 0:
    return "‚ö†Ô∏è ‚Ä¢ –î–µ–¥–ª–∞–π–Ω —Å–µ–≥–æ–¥–Ω—è!"
  else:
    return f"‚è∞ ‚Ä¢ –î–æ –¥–µ–¥–ª–∞–π–Ω–∞ –æ—Å—Ç–∞–ª–æ—Å—å {time_left.days} –¥–Ω–µ–π"


# –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–º–µ—Ç–∫–∏


def create_note():
  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏
  note_data = data_init()
  note_data.append(status_init())
  note_data.append(title_init())
  
  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ–¥–ª–∞–π–Ω
  deadline_status = check_deadline(note_data[2], note_data[3])
  
  # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –∑–∞–º–µ—Ç–∫–∏
  note = {
    'üë§ ‚Ä¢ –í–∞—à–µ –∏–º—è'               : note_data[0],
    'üìå ‚Ä¢ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–º–µ—Ç–∫–∏'      : note_data[5],
    'üìù ‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏'       : note_data[1],
    'üîò ‚Ä¢ –°—Ç–∞—Ç—É—Å –∑–∞–º–µ—Ç–∫–∏'         : note_data[4],
    'üìÖ ‚Ä¢ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏'  : note_data[2].strftime('%d-%m'),
    'üìÖ ‚Ä¢ –î–∞—Ç–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏' : note_data[3].strftime('%d-%m')
  }
  
  # –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –¥–µ–¥–ª–∞–π–Ω–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∑–∞–º–µ—Ç–∫–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞
  if note_data[4] != '‚úîÔ∏è  ‚Ä¢ –í—ã–ø–æ–ª–Ω–µ–Ω–æ':
    note['üî¥ ‚Ä¢ –°—Ç–∞—Ç—É—Å –¥–µ–¥–ª–∞–π–Ω–∞'] = deadline_status
    
  return note, note_data


# –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–º–µ—Ç–∫–∏


def delete_note(notes, note_data_list):
  if not notes:
    print("\n‚ùå –ù–µ—Ç –∑–∞–º–µ—Ç–æ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è!")
    return False
    
  print("\n–°–ø–∏—Å–æ–∫ –∑–∞–º–µ—Ç–æ–∫:")
  for i, note in enumerate(notes, 1):
    print(f"{i}. {note['üìå ‚Ä¢ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–º–µ—Ç–∫–∏']}")
    
  while True:
    try:
      note_num = int(input('\nüóëÔ∏è  ‚Ä¢ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–º–µ—Ç–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è >> ')) - 1
      if 0 <= note_num < len(notes):
        del notes[note_num]
        del note_data_list[note_num]
        print("\n‚úÖ ‚Ä¢ –ó–∞–º–µ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!")
        return True
      print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞–º–µ—Ç–∫–∏!")
    except ValueError:
      print("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!")


# –ù–∞—á–∞–ª–æ –ø—Ä–æ–≥—Ä–∞–º–º—ã


def main():
  notes = []           # –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–º–µ—Ç–æ–∫
  note_data_list = []  # –°–ø–∏—Å–æ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤—Å–µ—Ö –∑–∞–º–µ—Ç–æ–∫
  
  while True:
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–º–µ—Ç–∫—É
    note, note_data = create_note()
    notes.append(note)
    note_data_list.append(note_data)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –∑–∞–º–µ—Ç–∫–∏
    output(notes)
    
    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø—Ä–æ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–º–µ—Ç–∫–∏
    while True:
      create_new = input('\n–•–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–º–µ—Ç–∫—É? y/n >> ')
      if create_new.lower() in ['y', 'n']:
        break
      print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥! –í–≤–µ–¥–∏—Ç–µ 'y' –∏–ª–∏ 'n'")
        
    if create_new.lower() == 'n':
      while True:
        print("\n1 - –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–º–µ—Ç–∫–∏")
        print("2 - –£–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É")
        print("3 - –í—ã–π—Ç–∏")
        choice = input("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ >> ")
        
        if choice == "1":
          # –ï—Å–ª–∏ —Ö–æ—Ç–∏–º –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å
          while True:
            change_status = input('\n–•–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∫–∞–∫–æ–π-–ª–∏–±–æ –∑–∞–º–µ—Ç–∫–∏? y/n >> ')
            if change_status.lower() == 'y':
              # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–º–µ—Ç–æ–∫ —Å –Ω–æ–º–µ—Ä–∞–º–∏
              print("\n–°–ø–∏—Å–æ–∫ –∑–∞–º–µ—Ç–æ–∫:")
              for i, note in enumerate(notes, 1):
                print(f"{i}. {note['üìå ‚Ä¢ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–º–µ—Ç–∫–∏']}")
                
              # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–º–µ—Ä –∑–∞–º–µ—Ç–∫–∏
              while True:
                try:
                  note_num = int(input('\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–º–µ—Ç–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ >> ')) - 1
                  if 0 <= note_num < len(notes):
                    break
                  print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –∑–∞–º–µ—Ç–∫–∏!")
                except ValueError:
                  print("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!")
              
              # –ú–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∑–∞–º–µ—Ç–∫–∏
              old_status = note_data_list[note_num][4]
              note_data_list[note_num][4] = status_init()
              
              # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –≤ —Å–ª–æ–≤–∞—Ä–µ –∑–∞–º–µ—Ç–∫–∏
              if old_status == '‚úîÔ∏è  ‚Ä¢ –í—ã–ø–æ–ª–Ω–µ–Ω–æ' and note_data_list[note_num][4] != '‚úîÔ∏è  ‚Ä¢ –í—ã–ø–æ–ª–Ω–µ–Ω–æ':
                deadline_status = check_deadline(note_data_list[note_num][2], note_data_list[note_num][3])
                notes[note_num]['üî¥ ‚Ä¢ –°—Ç–∞—Ç—É—Å –¥–µ–¥–ª–∞–π–Ω–∞'] = deadline_status
              elif old_status != '‚úîÔ∏è  ‚Ä¢ –í—ã–ø–æ–ª–Ω–µ–Ω–æ' and note_data_list[note_num][4] == '‚úîÔ∏è  ‚Ä¢ –í—ã–ø–æ–ª–Ω–µ–Ω–æ':
                if 'üî¥ ‚Ä¢ –°—Ç–∞—Ç—É—Å –¥–µ–¥–ª–∞–π–Ω–∞' in notes[note_num]:
                  del notes[note_num]['üî¥ ‚Ä¢ –°—Ç–∞—Ç—É—Å –¥–µ–¥–ª–∞–π–Ω–∞']
              
              notes[note_num]['üîò ‚Ä¢ –°—Ç–∞—Ç—É—Å –∑–∞–º–µ—Ç–∫–∏'] = note_data_list[note_num][4]
              output(notes)
            elif change_status.lower() == 'n':
              break
            else:
              print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥! –í–≤–µ–¥–∏—Ç–µ 'y' –∏–ª–∏ 'n'")
              
        elif choice == "2":
          # –ï—Å–ª–∏ —Ö–æ—Ç–∏–º —É–¥–∞–ª–∏—Ç—å –∑–∞–º–µ—Ç–∫—É
          if delete_note(notes, note_data_list):
            output(notes)
            
        elif choice == "3":
          break
            
        else:
          print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä!")
      break


if __name__ == '__main__':
  main()